"use strict";
var reporters = require("../reporters");
var _ = require("lodash");
var util = require("../util");
var neededSolverParameters = [
    "cipherText",
    "cipher",
    "stat",
    "solver",
    "reporter"
];
var defaultSolverParams = {
    reporter: reporters.stdout,
    settings: {
        formatResult: false
    }
};
function solve(parameters) {
    if (parameters.cipher == undefined) {
        throw new Error("Cannot solve ciphertext with no specified cipher");
    }
    _.defaultsDeep(parameters, _.cloneDeep(parameters.cipher.defaultSolverParameters), _.cloneDeep(defaultSolverParams));
    neededSolverParameters.forEach(function (param) {
        if (parameters[param] == undefined) {
            throw new Error("Solver cannot infer and has not been passsed parameter \"" + parameters[param] + "\"");
        }
    });
    var rawSolve = parameters.solver.rawSolve(parameters);
    if (parameters.settings.formatResult) {
        return rawSolve;
    }
    return {
        text: util.format(rawSolve.text, parameters.cipherText),
        key: rawSolve.key
    };
}
exports.solve = solve;
var Solver = (function () {
    function Solver() {
        Solver.allSolvers.push(this);
    }
    Solver.prototype.solve = function (args) {
        if (args.cipherText == "")
            throw Error("Cannot solve a plaintext of length 0");
        args.solver = this;
        return solve(args);
    };
    Solver.allSolvers = [];
    return Solver;
}());
exports.Solver = Solver;
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Solver;
//# sourceMappingURL=Solver.js.map