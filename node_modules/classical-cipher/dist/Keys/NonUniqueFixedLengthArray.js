"use strict";
var _ = require("lodash");
var util_1 = require("../util");
var InvalidKeyException_1 = require("./InvalidKeyException");
var NonUniqueFixedLengthArray = (function () {
    function NonUniqueFixedLengthArray(alphabet, keyLength) {
        this.alphabet = alphabet;
        this.keyLength = keyLength;
    }
    Object.defineProperty(NonUniqueFixedLengthArray.prototype, "range", {
        get: function () {
            return Math.pow(this.alphabet.length, this.keyLength);
        },
        enumerable: true,
        configurable: true
    });
    NonUniqueFixedLengthArray.prototype.getPrimitiveKey = function (key) {
        if (_.isArray(key)) {
            return key;
        }
        else {
            throw new InvalidKeyException_1.default(key, "it is not an array");
        }
    };
    NonUniqueFixedLengthArray.prototype.generateOrdered = function (previous) {
        var newArr = previous;
        var i = 0;
        for (var i = 0; i < newArr.length; i++) {
            var letterIndex = this.alphabet.indexOf(newArr[i]);
            if (letterIndex < this.alphabet.length - 1) {
                newArr.push(this.alphabet[letterIndex + 1]);
                break;
            }
            else {
                newArr.push(this.alphabet[0]);
                i++;
            }
        }
        return newArr;
    };
    NonUniqueFixedLengthArray.prototype.startGeneration = function () {
        return util_1.generateUniformArray(this.alphabet[0], this.keyLength);
    };
    NonUniqueFixedLengthArray.prototype.generateRandom = function () {
        var rndStr = [];
        for (var i = 0; i < this.keyLength; i++) {
            rndStr.push(this.alphabet[_.random(this.alphabet.length - 1)]);
        }
        return rndStr;
    };
    return NonUniqueFixedLengthArray;
}());
module.exports = NonUniqueFixedLengthArray;
//# sourceMappingURL=NonUniqueFixedLengthArray.js.map