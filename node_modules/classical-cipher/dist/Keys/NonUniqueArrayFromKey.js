"use strict";
var keysUtils_1 = require("./keysUtils");
var NonUniqueArrayFromKey = (function () {
    function NonUniqueArrayFromKey(key) {
        this.getKey = keysUtils_1.processKeyGeneratingValue(key);
    }
    Object.defineProperty(NonUniqueArrayFromKey.prototype, "range", {
        get: function () {
            return Infinity;
        },
        enumerable: true,
        configurable: true
    });
    NonUniqueArrayFromKey.prototype.generateRandom = function (keyLength) {
        if (keyLength === void 0) { keyLength = 5; }
        var rndArr = [];
        for (var i = 0; i < keyLength; i++) {
            rndArr.push(this.getKey(keyLength).generateRandom());
        }
        return rndArr;
    };
    NonUniqueArrayFromKey.prototype.generateOrdered = function (previous) {
        var newArr = previous;
        for (var i = 0; i < newArr.length; i++) {
            var nextElement = this.getKey(newArr.length).generateOrdered(previous[i]);
            if (nextElement !== null) {
                newArr[i] = nextElement;
            }
            else if (i == newArr.length - 1) {
                newArr.push(this.getKey(newArr.length + 1).startGeneration());
            }
        }
        return newArr;
    };
    NonUniqueArrayFromKey.prototype.getPrimitiveKey = function (key) {
        var _this = this;
        keysUtils_1.testKeyType(key, "array");
        return key.map(function (_) { return _this.getKey(key.length).getPrimitiveKey(key); });
    };
    NonUniqueArrayFromKey.prototype.startGeneration = function () {
        return [this.getKey(1).startGeneration()];
    };
    return NonUniqueArrayFromKey;
}());
module.exports = NonUniqueArrayFromKey;
//# sourceMappingURL=NonUniqueArrayFromKey.js.map