"use strict";
var _ = require("lodash");
var keysUtils_1 = require("./keysUtils");
var InvalidKeyException_1 = require("./InvalidKeyException");
var Arrangement = (function () {
    function Arrangement(alphabet) {
        this.getAlphabet = keysUtils_1.processKeyGeneratingValue(alphabet);
    }
    Arrangement.prototype.startGeneration = function () {
        return this.getAlphabet(1);
    };
    Object.defineProperty(Arrangement.prototype, "range", {
        get: function () {
            return Infinity;
        },
        enumerable: true,
        configurable: true
    });
    Arrangement.prototype.getPrimitiveKey = function (key) {
        keysUtils_1.testKeyType(key, "array");
        keysUtils_1.testUniqueArray(key);
        var diff = _.difference(key, this.getAlphabet(key.length));
        if (!_.isEmpty(diff)) {
            throw new InvalidKeyException_1.default(key, diff + " " + (diff.length == 1 ? "is" : "are") + " not in the alphabet", true);
        }
        else {
            return key;
        }
    };
    Arrangement.prototype.generateRandom = function (keyLength) {
        if (keyLength === void 0) { keyLength = 5; }
        return _.shuffle(this.getAlphabet(keyLength));
    };
    Arrangement.prototype.generateOrdered = function (previous) {
        if (previous === void 0) { previous = this.startGeneration(); }
        return keysUtils_1.nextPermutation(previous);
    };
    return Arrangement;
}());
module.exports = Arrangement;
//# sourceMappingURL=Arrangement.js.map